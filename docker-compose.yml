version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: happyhour
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/happyhour
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  web-vendor:
    build:
      context: ./apps/web-vendor
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
    depends_on:
      - backend
    volumes:
      - ./apps/web-vendor:/app
      - /app/node_modules
    command: npm run dev

  web-admin:
    build:
      context: ./apps/web-admin
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
    depends_on:
      - backend
    volumes:
      - ./apps/web-admin:/app
      - /app/node_modules
    command: npm run dev

  mobile:
    build:
      context: ./apps/mobile
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - EXPO_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./apps/mobile:/app
      - /app/node_modules
    command: npx expo start --web --port 8081

volumes:
  postgres_data:
  redis_data:
